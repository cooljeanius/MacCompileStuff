#!/usr/bin/env bash
#
# readline_build
# Martin HrubÃ½ (hrubymar10), 2018-2023
#

set -e

READLINE_VERSION="8.2"
PATCH_PREFIX="readline82"
NUM_OF_PATHES="7"
SHA256="3feb7171f16a84ee82ca18a36d7b9be109a52c04f492a053331d7d1095007c35"
SHA256_PATCHES=(
  "bbf97f1ec40a929edab5aa81998c1e2ef435436c597754916e6a5868f273aff7"
  "e06503822c62f7bc0d9f387d4c78c09e0ce56e53872011363c74786c7cd4c053"
  "24f587ba46b46ed2b1868ccaf9947504feba154bb8faabd4adaea63ef7e6acb0"
  "79572eeaeb82afdc6869d7ad4cba9d4f519b1218070e17fa90bbecd49bd525ac"
  "622ba387dae5c185afb4b9b20634804e5f6c1c6e5e87ebee7c35a8f065114c99"
  "c7b45ff8c0d24d81482e6e0677e81563d13c74241f7b86c4de00d239bc81f5a1"
  "5911a5b980d7900aabdbee483f86dab7056851e6400efb002776a0a4a1bab6f6"
)

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi

source "${MY_PATH}/env"
source "${MY_PATH}/functions"

check_wget

cd "${SOURCES_PATH}"
rm -rf "readline"*
get_src_and_verify_checksum "readline-${READLINE_VERSION}.tar.gz" "${SHA256}" "https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}.tar.gz"
tar xf "${SOURCES_PATH}/archives/readline-${READLINE_VERSION}.tar.gz" -C .
cp -R "readline-${READLINE_VERSION}" "readline-${READLINE_VERSION}-arm64"
mv "readline-${READLINE_VERSION}" "readline-${READLINE_VERSION}-x86_64"
ln -s "readline-${READLINE_VERSION}-x86_64" "readline"

# Build x86_64
cd "${SOURCES_PATH}/readline-${READLINE_VERSION}-x86_64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_X86_64}"
export CFLAGS="${CFLAGS_X86_64}"
export CXXFLAGS="${CXXFLAGS_X86_64}"
if [ "${NUM_OF_PATHES}" -gt 0 ]; then
  for i in $(seq 1 ${NUM_OF_PATHES}); do
    PATCH=`printf "%03d\n" ${i}`
    get_src_and_verify_checksum "${PATCH_PREFIX}-${PATCH}" "${SHA256_PATCHES[$((${i}-1))]}" "https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}-patches/${PATCH_PREFIX}-${PATCH}"
    patch -b < "${SOURCES_PATH}/archives/${PATCH_PREFIX}-${PATCH}"
  done
fi
./configure --enable-shared --host=x86_64-apple-darwin
make shared

# Build arm64
cd "${SOURCES_PATH}/readline-${READLINE_VERSION}-arm64"
source "${MY_PATH}/env"
export LDFLAGS="${LDFLAGS_ARM64}"
export CFLAGS="${CFLAGS_ARM64}"
export CXXFLAGS="${CXXFLAGS_ARM64}"
if [ "${NUM_OF_PATHES}" -gt 0 ]; then
  for i in $(seq 1 ${NUM_OF_PATHES}); do
    PATCH=`printf "%03d\n" ${i}`
    get_src_and_verify_checksum "${PATCH_PREFIX}-${PATCH}" "${SHA256_PATCHES[$((${i}-1))]}" "https://ftp.gnu.org/gnu/readline/readline-${READLINE_VERSION}-patches/${PATCH_PREFIX}-${PATCH}"
    patch -b < "${SOURCES_PATH}/archives/${PATCH_PREFIX}-${PATCH}"
  done
fi
./configure --enable-shared --host=aarch64-apple-darwin
make shared

mkdir "readline-${READLINE_VERSION}-RELEASE"
cd "readline-${READLINE_VERSION}-RELEASE"
lipo -create "${SOURCES_PATH}/readline-${READLINE_VERSION}-arm64/shlib/libreadline.${READLINE_VERSION}.dylib" "${SOURCES_PATH}/readline-${READLINE_VERSION}-x86_64/shlib/libreadline.${READLINE_VERSION}.dylib" -output "libreadline.${READLINE_VERSION}.dylib"
install_name_tool -id "@rpath/libreadline.${READLINE_VERSION}.dylib" "libreadline.${READLINE_VERSION}.dylib"
rm -rf "${LIBS_PATH}/libreadline"*
cp -rf "libreadline.${READLINE_VERSION}.dylib" "${LIBS_PATH}/libreadline.${READLINE_VERSION}.dylib"
ln -s "libreadline.${READLINE_VERSION}.dylib" "${LIBS_PATH}/libreadline.dylib"
ln -s "libreadline.${READLINE_VERSION}.dylib" "${LIBS_PATH}/libreadline.8.1.dylib"
ln -s "libreadline.${READLINE_VERSION}.dylib" "${LIBS_PATH}/libreadline.8.0.dylib"
rm -rf "${HEADERS_PATH}/readline"
mkdir "${HEADERS_PATH}/readline"
cd "${SOURCES_PATH}/readline"
cp -rf "chardefs.h" "history.h" "keymaps.h" "readline.h" "rlconf.h" "rlstdc.h" "rltypedefs.h" "tilde.h" "${HEADERS_PATH}/readline/"
echo "==> DONE ..."
echo ""
time_interval_to_string "${starttimestamp}" "$(date +%s)"
echo ""
