--- gio/tests/meson.build	2023-10-25 13:33:59
+++ gio/tests/meson.build	2023-10-29 11:54:03
@@ -187,39 +187,7 @@
   test_env.set('GIO_LAUNCH_DESKTOP', gio_launch_desktop.full_path())
 endif
 
-# Check for libdbus1 - Optional - is only used in the GDBus test cases
-# 1.2.14 required for dbus_message_set_serial
-dbus1_dep = dependency('dbus-1', required : false, version : '>= 1.2.14')
-if not dbus1_dep.found()
-  if cc.get_id() == 'msvc' or cc.get_id() == 'clang-cl'
-    # MSVC: Search for the DBus library by the configuration, which corresponds
-    # to the output of CMake builds of DBus.  Note that debugoptimized
-    # is really a Release build with .PDB files.
-    if vs_crt == 'debug'
-      dbus1_dep = cc.find_library('dbus-1d', required : false)
-    else
-      dbus1_dep = cc.find_library('dbus-1', required : false)
-    endif
-  endif
-endif
-if dbus1_dep.found()
-  glib_conf.set('HAVE_DBUS1', 1)
-
-  gio_tests += {
-    'gdbus-serialization' : {
-      'extra_sources' : ['gdbus-tests.c'],
-      'dependencies' : [dbus1_dep],
-    },
-    'gdbus-server-auth' : {
-      'dependencies' : [dbus1_dep],
-    },
-  }
-else
-  # We can build a cut-down version of this test without libdbus
-  gio_tests += {
-    'gdbus-server-auth' : {},
-  }
-endif
+glib_conf.set('HAVE_DBUS1', 0)
 
 have_dbus_daemon = find_program('dbus-daemon', required : false).found()
 if have_dbus_daemon
@@ -450,10 +418,6 @@
       'gdbus-proxy' : {
         'extra_sources' : extra_sources,
         'extra_programs': extra_programs,
-      },
-      'gdbus-proxy-threads' : {
-        'extra_sources' : extra_sources,
-        'dependencies' : [dbus1_dep],
       },
       'gdbus-proxy-unique-name' : {
         'extra_sources' : extra_sources,
