#!/usr/bin/env bash
#
# pango_build
# Martin HrubÃ½ (hrubymar10), 2018-2020
#

set -e

PANGO_VERSION="1.46.1"
PANGO_VERSION_SHORT="1.46"
SHA256="fe516b10711bbb6fd75011d66dd08fabfce18f7931aed7415136d53c4aadf1c5"

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi

source "${MY_PATH}/env"
source "${MY_PATH}/functions"
unset MACOSX_DEPLOYMENT_TARGET

check_wget
check_xcode
check_libffi
check_glib
check_cairo
check_gettext
check_harfbuzz
check_fontconfig
check_freetype
check_fribidi
check_meson
check_ninja

cd "${SOURCES_PATH}"
rm -rf "pango"*
get_src_and_verify_checksum "pango-${PANGO_VERSION}.tar.xz" "${SHA256}" "http://ftp.gnome.org/pub/GNOME/sources/pango/${PANGO_VERSION_SHORT}/pango-${PANGO_VERSION}.tar.xz"
tar xf "${SOURCES_PATH}/archives/pango-${PANGO_VERSION}.tar.xz" -C .
ln -s "pango-${PANGO_VERSION}" "pango"
cd "pango"
mkdir "build"
sed -i -e "/Werror=implicit-fallthrough/d" "meson.build"
meson -Dintrospection=true -Duse_fontconfig=true --default-library=shared --buildtype=release . "build"
cd "build"
ninja
mkdir "pango-${PANGO_VERSION}-RELEASE"
cp "pango/libpango-1.0.0.dylib" "pango-${PANGO_VERSION}-RELEASE/libpango-1.0.0.dylib"
cp "pango/libpangocairo-1.0.0.dylib" "pango-${PANGO_VERSION}-RELEASE/libpangocairo-1.0.0.dylib"
cp "pango/libpangoft2-1.0.0.dylib" "pango-${PANGO_VERSION}-RELEASE/libpangoft2-1.0.0.dylib"
cd "pango-${PANGO_VERSION}-RELEASE"
for filename in * ; do
  install_name_tool -id "@rpath/${filename}" "${filename}"
  edit_dylib_deps "${filename}"
  remove_rpath_if_exists "${filename}" "/usr/local/Cellar/cairo/"
  remove_rpath_if_exists "${filename}" "/usr/local/opt/freetype/lib"
  remove_rpath_if_exists "${filename}" "/usr/local/Cellar/harfbuzz/"
  remove_rpath_if_exists "${filename}" "/usr/local/Cellar/fribidi/"
  remove_rpath_if_exists "${filename}" "@loader_path/"
done
rm -rf "${LIBS_PATH}/libpango"*
cp -rf * "${LIBS_PATH}/"
rm -rf "${HEADERS_PATH}/pango"
mkdir "${HEADERS_PATH}/pango"
cp "${SOURCES_PATH}/pango/build/pango/pango-enum-types.h" "${HEADERS_PATH}/pango/"
cp "${SOURCES_PATH}/pango/build/pango/pango-features.h" "${HEADERS_PATH}/pango/"
cd "${SOURCES_PATH}/pango/pango"
cp "pango-attributes.h" "pango-bidi-type.h" "pango-break.h" "pango-context.h" "pango-coverage.h" "pango-engine.h" "pango-font.h" "pango-fontmap.h" "pango-fontset.h" "pango-glyph-item.h" "pango-glyph.h" "pango-gravity.h" "pango-item.h" "pango-language.h" "pango-layout.h" "pango-matrix.h" "pango-modules.h" "pango-ot.h" "pango-renderer.h" "pango-script.h" "pango-tabs.h" "pango-types.h" "pango-utils.h" "pango.h" "pangocairo.h" "pangofc-decoder.h" "pangofc-font.h" "pangofc-fontmap.h" "pangoft2.h" "pangoxft-render.h" "pangoxft.h" "pango-version-macros.h" "pango-direction.h" "${HEADERS_PATH}/pango/"
echo "==> DONE ..."
echo
time_interval_to_string "${starttimestamp}" "$(date +%s)"
echo