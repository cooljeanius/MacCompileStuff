#!/usr/bin/env bash
#
# SDL2_build
# Martin HrubÃ½ (hrubymar10), 2019
#

SDL2_VERSION="2.0.9"
SDL2_image_VERSION="2.0.4"
SDL2_mixer_VERSION="2.0.4"
SDL2_net_VERSION="2.0.1"
SDL2_ttf_VERSION="2.0.15"

time_interval_to_string() {
        local START=$1
        local END=$2

        declare -i timestamp
        declare -i days
        declare -i hours
        declare -i minutes
        declare -i seconds
        timestamp=$END-$START

        days=$timestamp/60/60/24
        hours=$((($timestamp-($days*60*60*24))/60/60))
        minutes=$((($timestamp-($days*60*60*24)-($hours*60*60))/60))
        seconds=$((($timestamp-($days*60*60*24)-($hours*60*60)-($minutes*60))))
        if [ $days -eq 0 ]; then
        if [ $hours -eq 0 ]; then
                if [ $minutes -eq 0 ]; then
                echo "==> Operation took $seconds seconds ..."
                else
                echo "==> Operation took $minutes minutes and $seconds seconds ..."
                fi
        else
                echo "==> Operation took $hours hours $minutes minutes and $seconds seconds ..."
        fi
        else
        echo "==> Operation took $days days $hours hours $minutes minutes and $seconds seconds ..."
        fi
}

apply_fixes_for_appstore() {
        for filename in Frameworks/*.framework/Versions/A/*; do
                if [ -f "$filename" ]; then
                        lipo "$filename" -remove i386 -output "$filename"
                else
                        if [ -f "$filename/Info.plist" ]; then
                                CFBundleIdentifier=$(plutil -extract CFBundleIdentifier xml1 -o - $filename/Info.plist | sed -n "s/.*<string>\(.*\)<\/string>.*/\1/p")
                                if [[ -z "${CFBundleIdentifier// }" ]]; then
                                        CFBundleExecutable=$(plutil -extract CFBundleExecutable xml1 -o - $filename/Info.plist | sed -n "s/.*<string>\(.*\)<\/string>.*/\1/p")
                                        plutil -insert "CFBundleIdentifier" -string "org.$CFBundleExecutable.$CFBundleExecutable" "$filename/Info.plist"
                                fi

                                CFBundleSupportedPlatforms=$(plutil -extract CFBundleSupportedPlatforms xml1 -o - $filename/Info.plist | sed -n "s/.*<string>\(.*\)<\/string>.*/\1/p")
                                if [[ -z "${CFBundleIdentifier// }" ]]; then
                                        plutil -insert "CFBundleSupportedPlatforms" -xml "<array/>" "$filename/Info.plist"
                                        plutil -insert "CFBundleSupportedPlatforms.0" -string "MacOSX" "$filename/Info.plist"
                                fi
                        fi
                fi
        done
}

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname $0` && pwd)
if [ -z "$MY_PATH" ] ; then
        # error; for some reason, the path is not accessible
        # to the script (e.g. permissions re-evaled after suid)
        echo 'Error: Script path is for some reason not accessible' >&2
        exit 1  # fail
fi
cd "$MY_PATH"/../Sources

if ! [ -x "$(command -v wget)" ]; then
        echo 'Error: wget is not installed. Use for example Homebrew and install it. See https://brew.sh/' >&2
        exit 1
fi

if xcode-select --install 2>&1 | grep installed; then
        echo "==> Xcode Command Line Tools are installed..."
else
        echo "==> Xcode Command Line Tools aren't installed, installing..."
        xcode-select --install
fi

rm -rf SDL2
mkdir SDL2
cd SDL2

wget "https://www.libsdl.org/release/SDL2-$SDL2_VERSION.tar.gz"
tar xf "SDL2-$SDL2_VERSION.tar.gz"
rm "SDL2-$SDL2_VERSION.tar.gz"
ln -s "SDL2-$SDL2_VERSION" SDL
cd SDL/Xcode/SDL/
apply_fixes_for_appstore
xcodebuild -project SDL.xcodeproj -target Framework -configuration Release BUILD_DIR="out" MACOSX_DEPLOYMENT_TARGET="10.8"
rm -rf "$MY_PATH"/../../lib/SDL2.framework
cp -Rf out/Release/SDL2.framework "$MY_PATH"/../../lib/SDL2.framework

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_image/release/SDL2_image-$SDL2_image_VERSION.tar.gz"
tar xf "SDL2_image-$SDL2_image_VERSION.tar.gz"
rm "SDL2_image-$SDL2_image_VERSION.tar.gz"
cd "SDL2_image-$SDL2_image_VERSION/Xcode"
apply_fixes_for_appstore
xcodebuild -project SDL_image.xcodeproj -target Framework -configuration Release BUILD_DIR="out" SYMROOT="./out" MACOSX_DEPLOYMENT_TARGET="10.8"
rm -rf "$MY_PATH"/../../lib/SDL2_image.framework
cp -Rf out/Release/SDL2_image.framework "$MY_PATH"/../../lib/SDL2_image.framework

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-$SDL2_mixer_VERSION.tar.gz"
tar xf "SDL2_mixer-$SDL2_mixer_VERSION.tar.gz"
rm "SDL2_mixer-$SDL2_mixer_VERSION.tar.gz"
cd "SDL2_mixer-$SDL2_mixer_VERSION/Xcode"
apply_fixes_for_appstore
xcodebuild -project SDL_mixer.xcodeproj -target Framework -configuration Release BUILD_DIR="out" SYMROOT="./out" MACOSX_DEPLOYMENT_TARGET="10.8"
cp -Rf out/Release/SDL2_mixer.framework "$MY_PATH"/../../lib/SDL2_mixer.framework

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_net/release/SDL2_net-$SDL2_net_VERSION.tar.gz"
tar xf "SDL2_net-$SDL2_net_VERSION.tar.gz"
rm "SDL2_net-$SDL2_net_VERSION.tar.gz"
cd "SDL2_net-$SDL2_net_VERSION/Xcode"
apply_fixes_for_appstore
xcodebuild -project SDL_net.xcodeproj -target Framework -configuration Release BUILD_DIR="out" SYMROOT="./out" MACOSX_DEPLOYMENT_TARGET="10.8"
rm -rf "$MY_PATH"/../../lib/SDL2_net.framework
cp -Rf out/Release/SDL2_net.framework "$MY_PATH"/../../lib/SDL2_net.framework

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-$SDL2_ttf_VERSION.tar.gz"
tar xf "SDL2_ttf-$SDL2_ttf_VERSION.tar.gz"
rm "SDL2_ttf-$SDL2_ttf_VERSION.tar.gz"
cd "SDL2_ttf-$SDL2_ttf_VERSION/Xcode"
apply_fixes_for_appstore
xcodebuild -project SDL_ttf.xcodeproj -target Framework -configuration Release BUILD_DIR="out" SYMROOT="./out" MACOSX_DEPLOYMENT_TARGET="10.8"
rm -rf "$MY_PATH"/../../lib/SDL2_ttf.framework
cp -Rf out/Release/SDL2_ttf.framework "$MY_PATH"/../../lib/SDL2_ttf.framework

echo "==> DONE ..."
echo
time_interval_to_string "$starttimestamp" "$(date +%s)"
echo