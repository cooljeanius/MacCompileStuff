#!/usr/bin/env bash
#
# SDL2_build
# Martin HrubÃ½ (hrubymar10), 2019
#

SDL2_VERSION="2.0.9"
SDL2_image_VERSION="2.0.4"
SDL2_mixer_VERSION="2.0.4"
SDL2_net_VERSION="2.0.1"
SDL2_ttf_VERSION="2.0.15"

time_interval_to_string() {
        local START=$1
        local END=$2

        declare -i timestamp
        declare -i days
        declare -i hours
        declare -i minutes
        declare -i seconds
        timestamp=$END-$START

        days=$timestamp/60/60/24
        hours=$((($timestamp-($days*60*60*24))/60/60))
        minutes=$((($timestamp-($days*60*60*24)-($hours*60*60))/60))
        seconds=$((($timestamp-($days*60*60*24)-($hours*60*60)-($minutes*60))))
        if [ $days -eq 0 ]; then
        if [ $hours -eq 0 ]; then
                if [ $minutes -eq 0 ]; then
                echo "==> Operation took $seconds seconds ..."
                else
                echo "==> Operation took $minutes minutes and $seconds seconds ..."
                fi
        else
                echo "==> Operation took $hours hours $minutes minutes and $seconds seconds ..."
        fi
        else
        echo "==> Operation took $days days $hours hours $minutes minutes and $seconds seconds ..."
        fi
}

edit_dylib_deps() {
        DYLIB=$1
        DEPS=$(otool -L ${DYLIB} | awk '{print $1;}' | tail -n +2)

        for DEP in $DEPS; do
                DEP_BASE=$(basename ${DEP})
                if [ "$DEP_BASE" == "$(basename $DYLIB)" ]; then
                        continue
                fi
                # Is this our redistributable file?
                if [ -f $(dirname ${DYLIB})/${DEP_BASE} ]; then
                        install_name_tool -change "${DEP}" "@loader_path/${DEP_BASE}" ${DYLIB}
                fi
        done
}

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname $0` && pwd)
if [ -z "$MY_PATH" ] ; then
        # error; for some reason, the path is not accessible
        # to the script (e.g. permissions re-evaled after suid)
        echo 'Error: Script path is for some reason not accessible' >&2
        exit 1  # fail
fi
cd "$MY_PATH"/../Sources

if ! [ -x "$(command -v wget)" ]; then
        echo 'Error: wget is not installed. Use for example Homebrew and install it. See https://brew.sh/' >&2
        exit 1
fi

if xcode-select --install 2>&1 | grep installed; then
        echo "==> Xcode Command Line Tools are installed..."
else
        echo "==> Xcode Command Line Tools aren't installed, installing..."
        xcode-select --install
fi

rm -rf SDL2
mkdir SDL2
cd SDL2

wget "https://www.libsdl.org/release/SDL2-$SDL2_VERSION.tar.gz"
tar xf "SDL2-$SDL2_VERSION.tar.gz"
rm "SDL2-$SDL2_VERSION.tar.gz"
ln -s "SDL2-$SDL2_VERSION" SDL
cd SDL
./configure --without-x --disable-dependency-tracking --enable-shared
make update-revision
make MACOSX_DEPLOYMENT_TARGET=10.8
rm -rf "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
mkdir -p "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
cp "build/.libs/libSDL2-2.0.0.dylib" "$MY_PATH"/../CompiledLibs/SDL2-RELEASE/libSDL2-2.0.0.dylib
cd "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
install_name_tool -id "@executable_path/../Frameworks/libSDL2-2.0.0.dylib" "libSDL2-2.0.0.dylib"
edit_dylib_deps libSDL2-2.0.0.dylib
rm -rf "$MY_PATH"/../../lib/libSDL2-2.0.0.dylib
cp -rf libSDL2-2.0.0.dylib "$MY_PATH"/../../lib/libSDL2-2.0.0.dylib
cd "$MY_PATH"/../Sources/SDL2/SDL
mkdir "$MY_PATH"/../Sources/SDL2/SDL/dist
./configure --prefix="$MY_PATH"/../Sources/SDL2/SDL/dist
make install-hdrs
rm -rf "$MY_PATH"/../../Headers/SDL2
cp -rf "$MY_PATH"/../Sources/SDL2/SDL/dist/include/SDL2 "$MY_PATH"/../../Headers/SDL2

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_image/release/SDL2_image-$SDL2_image_VERSION.tar.gz"
tar xf "SDL2_image-$SDL2_image_VERSION.tar.gz"
rm "SDL2_image-$SDL2_image_VERSION.tar.gz"
cd "SDL2_image-$SDL2_image_VERSION"
./configure --disable-dependency-tracking --enable-shared
make MACOSX_DEPLOYMENT_TARGET=10.8
cp ".libs/libSDL2_image-2.0.0.dylib" "$MY_PATH"/../CompiledLibs/SDL2-RELEASE/libSDL2_image-2.0.0.dylib
cp -rf SDL_image.h "$MY_PATH"/../../Headers/SDL2/SDL_image.h
cd "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
install_name_tool -id "@executable_path/../Frameworks/libSDL2_image-2.0.0.dylib" "libSDL2_image-2.0.0.dylib"
edit_dylib_deps libSDL2_image-2.0.0.dylib
rm -rf "$MY_PATH"/../../lib/libSDL2_image-2.0.0.dylib
cp -rf libSDL2_image-2.0.0.dylib "$MY_PATH"/../../lib/libSDL2_image-2.0.0.dylib

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-$SDL2_mixer_VERSION.tar.gz"
tar xf "SDL2_mixer-$SDL2_mixer_VERSION.tar.gz"
rm "SDL2_mixer-$SDL2_mixer_VERSION.tar.gz"
cd "SDL2_mixer-$SDL2_mixer_VERSION"
./configure --disable-dependency-tracking --enable-shared
make MACOSX_DEPLOYMENT_TARGET=10.8
cp "build/.libs/libSDL2_mixer-2.0.0.dylib" "$MY_PATH"/../CompiledLibs/SDL2-RELEASE/libSDL2_mixer-2.0.0.dylib
cp -rf SDL_mixer.h "$MY_PATH"/../../Headers/SDL2/SDL_mixer.h
cd "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
install_name_tool -id "@executable_path/../Frameworks/libSDL2_mixer-2.0.0.dylib" "libSDL2_mixer-2.0.0.dylib"
edit_dylib_deps libSDL2_mixer-2.0.0.dylib
rm -rf "$MY_PATH"/../../lib/libSDL2_mixer-2.0.0.dylib
cp -rf libSDL2_mixer-2.0.0.dylib "$MY_PATH"/../../lib/libSDL2_mixer-2.0.0.dylib

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_net/release/SDL2_net-$SDL2_net_VERSION.tar.gz"
tar xf "SDL2_net-$SDL2_net_VERSION.tar.gz"
rm "SDL2_net-$SDL2_net_VERSION.tar.gz"
cd "SDL2_net-$SDL2_net_VERSION"
./configure --disable-dependency-tracking --enable-shared
make MACOSX_DEPLOYMENT_TARGET=10.8
cp ".libs/libSDL2_net-2.0.0.dylib" "$MY_PATH"/../CompiledLibs/SDL2-RELEASE/libSDL2_net-2.0.0.dylib
cp -rf SDL_net.h "$MY_PATH"/../../Headers/SDL2/SDL_net.h
cd "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
install_name_tool -id "@executable_path/../Frameworks/libSDL2_net-2.0.0.dylib" "libSDL2_net-2.0.0.dylib"
edit_dylib_deps libSDL2_net-2.0.0.dylib
rm -rf "$MY_PATH"/../../lib/libSDL2_net-2.0.0.dylib
cp -rf libSDL2_net-2.0.0.dylib "$MY_PATH"/../../lib/libSDL2_net-2.0.0.dylib

cd "$MY_PATH"/../Sources/SDL2

wget "https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-$SDL2_ttf_VERSION.tar.gz"
tar xf "SDL2_ttf-$SDL2_ttf_VERSION.tar.gz"
rm "SDL2_ttf-$SDL2_ttf_VERSION.tar.gz"
cd "SDL2_ttf-$SDL2_ttf_VERSION"
./configure --disable-dependency-tracking --enable-shared
make MACOSX_DEPLOYMENT_TARGET=10.8
cp ".libs/libSDL2_ttf-2.0.0.dylib" "$MY_PATH"/../CompiledLibs/SDL2-RELEASE/libSDL2_ttf-2.0.0.dylib
cp -rf SDL_ttf.h "$MY_PATH"/../../Headers/SDL2/SDL_ttf.h
cd "$MY_PATH"/../CompiledLibs/SDL2-RELEASE
install_name_tool -id "@executable_path/../Frameworks/libSDL2_ttf-2.0.0.dylib" "libSDL2_ttf-2.0.0.dylib"
edit_dylib_deps libSDL2_ttf-2.0.0.dylib
install_name_tool -change "/usr/local/opt/freetype/lib/libfreetype.6.dylib" "@loader_path/libfreetype.6.dylib" "libSDL2_ttf-2.0.0.dylib"
rm -rf "$MY_PATH"/../../lib/libSDL2_ttf-2.0.0.dylib
cp -rf libSDL2_ttf-2.0.0.dylib "$MY_PATH"/../../lib/libSDL2_ttf-2.0.0.dylib

echo "==> DONE ..."
echo
time_interval_to_string "$starttimestamp" "$(date +%s)"
echo