#!/usr/bin/env bash
#
# checks
# Martin HrubÃ½ (hrubymar10), 2020
#

set -e

MY_PATH=$(cd `dirname ${0}` && pwd)
if [ -z "${MY_PATH}" ] ; then
  # error; for some reason, the path is not accessible
  # to the script (e.g. permissions re-evaled after suid)
  echo 'Error: Script path is for some reason not accessible' >&2
  exit 1  # fail
fi
cd "${MY_PATH}/../../lib"

check_min_macos_version() {
  echo "==> Checking \"LC_VERSION_MIN_MACOSX\" atribute:"
  for DYLIB in *.dylib; do
    VERSION=$(otool -l "${DYLIB}" | grep "LC_VERSION_MIN_MACOSX" -A2 | grep "version" | awk '{print $2;}')
    printf "    %-50s %s\n" ${DYLIB} ${VERSION}
  done
  echo "==> Done"
  echo ""
}

check_for_bad_references() {
  echo "==> Checking for bad references:"
  for DYLIB in *.dylib; do
    BAD_REFERENCES=$(otool -L ${DYLIB} | grep "/usr/local/" | awk '{print $1;}')
    SAVEIFS="${IFS}"
    IFS=$'\n'
    BAD_REFERENCES=(${BAD_REFERENCES})
    IFS=${SAVEIFS}

    if (( ${#BAD_REFERENCES[@]} > 0 )); then
      echo "${DYLIB}"
      for (( i=0; i<${#BAD_REFERENCES[@]}; i++ )); do
        echo "    ${BAD_REFERENCES[$i]}"
      done
    fi
  done
  echo "==> Done"
  echo ""
}

check_for_rpaths() {
  echo "==> Checking for rpaths:"
  for DYLIB in *.dylib; do
    PATHS=$(otool -l "${DYLIB}" | grep "RPATH" -A2 | grep "path" | awk '{print $2;}')
    SAVEIFS="${IFS}"
    IFS=$'\n'
    PATHS=(${PATHS})
    IFS=${SAVEIFS}

    if (( ${#PATHS[@]} > 0 )); then
      echo "${DYLIB}"
      for (( i=0; i<${#PATHS[@]}; i++ )); do
        echo "    ${PATHS[$i]}"
      done
    fi
  done
  echo "==> Done"
  echo ""
}

check_min_macos_version
check_for_bad_references
check_for_rpaths
