#!/usr/bin/env bash
#
# freetype_build
# Martin HrubÃ½ (hrubymar10), 2018-2019
#

FREETYPE_VERSION="2.10.0"

edit_dylib_deps() {
        DYLIB=$1
        DEPS=$(otool -L ${DYLIB} | awk '{print $1;}' | tail -n +2)

        for DEP in $DEPS; do
                DEP_BASE=$(basename ${DEP})
                if [ "$DEP_BASE" == "$(basename $DYLIB)" ]; then
                        continue
                fi
                # Is this our redistributable file?
                if [ -f $(dirname ${DYLIB})/${DEP_BASE} ]; then
                        install_name_tool -change "${DEP}" "@loader_path/${DEP_BASE}" ${DYLIB}
                fi
        done
}

time_interval_to_string() {
        local START=$1
        local END=$2

        declare -i timestamp
        declare -i days
        declare -i hours
        declare -i minutes
        declare -i seconds
        timestamp=$END-$START

        days=$timestamp/60/60/24
        hours=$((($timestamp-($days*60*60*24))/60/60))
        minutes=$((($timestamp-($days*60*60*24)-($hours*60*60))/60))
        seconds=$((($timestamp-($days*60*60*24)-($hours*60*60)-($minutes*60))))
        if [ $days -eq 0 ]; then
        if [ $hours -eq 0 ]; then
                if [ $minutes -eq 0 ]; then
                echo "==> Operation took $seconds seconds ..."
                else
                echo "==> Operation took $minutes minutes and $seconds seconds ..."
                fi
        else
                echo "==> Operation took $hours hours $minutes minutes and $seconds seconds ..."
        fi
        else
        echo "==> Operation took $days days $hours hours $minutes minutes and $seconds seconds ..."
        fi
}

starttimestamp=$(date +%s)

MY_PATH=$(cd `dirname $0` && pwd)
if [ -z "$MY_PATH" ] ; then
        # error; for some reason, the path is not accessible
        # to the script (e.g. permissions re-evaled after suid)
        echo 'Error: Script path is for some reason not accessible' >&2
        exit 1  # fail
fi
cd "$MY_PATH"/../Sources

if ! [ -x "$(command -v wget)" ]; then
        echo 'Error: wget is not installed. Use for example Homebrew and install it. See https://brew.sh/' >&2
        exit 1
fi

# TODO: use libpng from MacCompileStuff
if ! [ -x "$(command -v libpng16-config)" ]; then
        echo 'Error: libpng is not installed. Use for example Homebrew and install it. See https://brew.sh/' >&2
        exit 1
fi

if xcode-select --install 2>&1 | grep installed; then
        echo "==> Xcode Command Line Tools are installed..."
else
        echo "==> Xcode Command Line Tools aren't installed, installing..."
        xcode-select --install
fi

# TODO: Verify checksum
rm -rf freetype-*
wget "https://download.savannah.gnu.org/releases/freetype/freetype-$FREETYPE_VERSION.tar.gz"
tar xf "freetype-$FREETYPE_VERSION.tar.gz"
rm "freetype-$FREETYPE_VERSION.tar.gz"
cd "freetype-$FREETYPE_VERSION"
sh autogen.sh
./configure --with-harfbuzz=no --enable-shared
make MACOSX_DEPLOYMENT_TARGET=10.8
mkdir "freetype-$FREETYPE_VERSION-RELEASE"
cp "objs/.libs/libfreetype.6.dylib" "freetype-$FREETYPE_VERSION-RELEASE/libfreetype.6.dylib"
cd "freetype-$FREETYPE_VERSION-RELEASE"
install_name_tool -id "@executable_path/../Frameworks/libfreetype.6.dylib" "libfreetype.6.dylib"
edit_dylib_deps libfreetype.6.dylib
install_name_tool -change "/usr/local/opt/libpng/lib/libpng16.16.dylib" "@loader_path/libpng16.16.dylib" "libfreetype.6.dylib"
cd "$MY_PATH"/../
rm -rf CompiledLibs/freetype-*
mv "Sources/freetype-$FREETYPE_VERSION/freetype-$FREETYPE_VERSION-RELEASE" "CompiledLibs/freetype-$FREETYPE_VERSION-RELEASE"
rm -rf ../lib/libfreetype.6.dylib
cp -rf "CompiledLibs/freetype-$FREETYPE_VERSION-RELEASE/libfreetype.6.dylib" "../lib/libfreetype.6.dylib"
echo "==> DONE ..."
echo
time_interval_to_string "$starttimestamp" "$(date +%s)"
echo